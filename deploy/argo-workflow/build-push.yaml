apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: apihut-server-
  namespace: apihut
spec:
  entrypoint: works
  onExit: clean
  volumes:
    - name: workdir
      persistentVolumeClaim:
        claimName: golang-cache
  arguments:
    parameters:
      - name: code-path
        value: "/go/src/git.northes.io/apihut/server"
      - name: image-repo
        value: "192.168.31.5:5050/apihut/server:ci"
  templates:
    - name: works
      steps:
        - - name: source
            template: source
        - - name: image
            template: image
    - name: source
      inputs:
        artifacts:
          - name: clone
            path: "{{workflow.parameters.code-path}}"
            git:
              repo: http://192.168.31.5:3000/apihut/server.git
              revision: ci
              usernameSecret:
                key: username
                name: gitea-certs
              passwordSecret:
                key: password
                name: gitea-certs
      container:
        image: hub.northes.io/golang:1.20
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /go
            name: workdir
        workingDir: "{{workflow.parameters.code-path}}"
        env:
          - name: GO111MODULE
            value: "on"
          - name: CGO_ENABLED
            value: "1"
          - name: GOOS
            value: "linux"
          - name: GOARCH
            value: "amd64"
          - name: GOPROXY
            value: "http://192.168.31.5:8081"
          - name: GOCACHE
            value: "/go/cache/go-build"
          - name: GOLANG_LINT_CACHE
            value: "/go/cache/golangci-lint"
        command:
          - sh
          - -c
        args: ['
          go env ;
          make build ;
          pwd ;
          ls -la
        ']
    - name: image
      container:
        image: hub.northes.io/kaniko-project/executor:latest
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /go
            name: workdir
        workingDir: "{{workflow.parameters.code-path}}"
        args:
          - "--dockerfile={{workflow.parameters.code-path}}/DockerfileCI"
          - "--context=dir://{{workflow.parameters.code-path}}"
          - "--destination={{workflow.parameters.image-repo}}"
    - name: clean
      container:
        image: hub.northes.io/alpine:latest
        volumeMounts:
          - mountPath: /go
            name: workdir
        command:
          - sh
          - -c
        args:
          - "rm -rf {{workflow.parameters.code-path}}"