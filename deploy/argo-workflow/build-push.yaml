apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: apihut-server-
  namespace: apihut
spec:
  entrypoint: works
  volumeClaimTemplates:
    - metadata:
        name: workdir
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 1Gi
        storageClassName: nfs-client
  templates:
    - name: works
      steps:
        - - name: source
            template: source
        - - name: image
            template: image
    - name: source
      inputs:
        artifacts:
          - name: clone
            path: /go/src
            git:
              repo: http://192.168.31.5:3000/apihut/server.git
              revision: main
              usernameSecret:
                key: username
                name: gitea-certs
              passwordSecret:
                key: password
                name: gitea-certs
      container:
        image: hub.northes.io/golang:1.20
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /go
            name: workdir
        workingDir: /go/src
        env:
          - name: GO111MODULE
            value: "on"
          - name: CGO_ENABLED
            value: "1"
          - name: GOOS
            value: "linux"
          - name: GOARCH
            value: "amd64"
          - name: GOPROXY
            value: "http://192.168.31.5:8081"
        command:
          - sh
          - -c
        args:
          - go env && pwd && make build && ls -la
    - name: image
      container:
        image: hub.northes.io/kaniko-project/executor:latest
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /go
            name: workdir
        workingDir: /go/src
        args:
          - "--dockerfile=/go/src/DockerfileCI"
          - "--context=dir:///go/src"
          - "--destination=192.168.31.5:5050/apihut-server:latest"